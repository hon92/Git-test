TODO
-pridat nejaky text search a zvyraznovani
-moznost vytvorit vlastni snippet napr pro pack a unpack, token_name atd
-mozna naky refactoring typu generate function
-overit nastaveni info boxu kdy se ma a nema zobrazit
-pridat do validate_refactor id pro ruzne bloky(z cindex.py)
-pridani vice informaci do info boxu
-prejit na novejsi verzi libclang
- prefix muze zacinat cislem? brat to jako identifikator promenne?
-opravit podtrhavani erroru
-nejaky lazy load pro proposals(self.results bude jako clang results a pak otestovat zda uz je zpracovana jako muj item)
-co udelat s generator.py -> pri zmene se generuje novy a to bere neco pres 1s a je potreba pro doplnovani kodu.(pri otevreni napr head nebo node se musi volat get_generator() coz pokud uz neni nacten trva a dost zpomaluje zobrazeni textview
-lze nejak vyuzit ten panel kde jsou ted cislovane radky
-jak naimportovat ptp do gui
-jaky filter pouzit pro vysledky do Type okna(mozna vsechny ktere maji nejakou navr.hodnotu)
-v nove verzi libclangu je moznost ziskat v nejake strukture promenne z tridy -> lze vyuzit na generovani tech pack a unpack
-pri zmene fontu nebo jeho velikosti se musi prenastavit x,y objektu(jsou ted napevno)
-nejak omezit _load_header v clangparser->zpomaluje zobrazeni headcodu a vsech ostatnich
-generator z project.py se resetuje pri ulozeni headcode

ProposalItem
-label -> zobrazeno v okne
-text -> co se vypise do bufferu po aktivaci
-icon -> ikona
-info -> co se vypise do toho cerneho okenka pri detailu
-placeholders -> list stringu kde jsou {,},(,) atd a taky placeholder a nakonec cislo udavajici pocet tech placeholderu



DONE
-pri kliknuti pravym se na pozici mysi presune cursor
-zruseno trideni proposals protoze clang vysledky vraci uz podle nej.pravdepodobnosti..a davaji vetsi smysl nez abecedne serazene
-nezobrazi se proposals pokud je v kodu vyse nejaka chyba
-predelany refactoring dialog
-placeholdery pokud se v kodu zanoruje do vice placeholderu se ukladaji na stack a pak se da vracet k predeslym
-pridano napojeni na gutter(ten sloupec vlevo kde jsou cisla radku)
-fixnuto vkladani dodatecnych zavorek
-trochu predelana fcu na formatovani vysledku(o neco rychlejsi a umoznuje pracovat s placeholdery)
-lze vygenerovat vlastni snippety(zatim jen ciste v kodu)
-kod prepsan na style Kairy
-kod se neparsuje po kazde zmene ale az jakmile se zmena provedla && neni nic stiknuto
-lze nastavit filtrovani obsahu vysledku na zaklade contextu(context umim zjistit ale je to k nicemu)
-mozna vyresen problem pri refactoringu s nazvem promennych
-vymyslet jak zajistit aby pri refactoringu nebylo nove jmeno uz nazev nejake promenne
-vyladit kdy lze prejmenovat promennou pri refactoringu vzhledem k bloku
-zrusit placeholder pokud se mysi klikne mimo min a max hranici placeholderu
-upravit mozna keymap
-upravit placeholders
-parsovani kodu az po zmene..a ne vzdy
-vypis do kaira console pri parse error
-fce pro param struct only misto celeho head codu
-fixnout refactoring pro promenne na stejnem radku pri ruznych delkach noveho jmeno oproti staremu
-pri refactoringu projit vsechny nets(ted se prohledava pouze vybrana net)
-pridano zobrazeni kolik vysledku se zobrazilo do complete okna
-nevalidni refaktoring zobrazi info primo v dialogu

HOW

-jak naimportovat neco z ptp v gui slozce
